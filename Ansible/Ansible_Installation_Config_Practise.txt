Ansible Installation & Configurations:

Launch - Ubuntu - v22.04 | 3 EC2 Instances... 1 for Ansible Controller & 2 as Nodes - ubuntu v22.04

SSH connections :::

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Login to Ansible Node1 & Node2. Perform below activities:

#Add User in Ansible Nodes : 

sudo -i

apt update -y 

useradd ansibleadmin -s /bin/bash -m -d /home/ansibleadmin 

passwd ansibleadmin

#Enter New Password:
#Confirm Password:

#Goto:

vi /etc/ssh/sshd_config

#Enable Password Authentication to Yes and save the file
#Execute Below command to update the changes.

service ssh reload

#As a root user edit below file:

$ visudo

#add the below mentioned line in the file and save it.
 
ansibleadmin ALL=(ALL) NOPASSWD: ALL

su - ansibleadmin

ls -a 



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#Login to Ansible Controller:
https://docs.ansible.com/ansible/latest/installation_guide/installation_distros.html

https://docs.ansible.com/ansible/latest/installation_guide/installation_distros.html#installing-ansible-on-ubuntu

sudo -i

#ssh-copy-id ansibleadmin@172.31.2.214
#ssh-copy-id ansibleadmin@172.31.33.217

sudo apt update -y

sudo apt install software-properties-common -y
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt update -y
sudo apt install ansible -y

ansible --version

#go to /etc/ansible

#hosts - Default inventory file
#config
#roles 

#Add User in Ansible Controller : 

useradd devopsadmin -s /bin/bash -m -d /home/devopsadmin

#useradd devopsadmin

su - devopsadmin	

#ssh-keygen -t rsa -b 1024 -m PEM

#ssh-keygen -R rsa -b 1024 -m PEM
ssh-keygen -t ecdsa -b 521										#ubuntu 22.04 or higher version of ubuntu				

ls ~/.ssh 

#You should see following two files:

#id_ecdsa - private key
#id_ecdsa.pub - public


#Goto Node1&2, within ansibleadmin home directory, create .ssh directory

vi authorized_keys

#paste the id_ecdsa.pub of devopsadmin user from controller machine to authorized_keys file in Ansible Node1 

chmod 600 /home/ansibleadmin/.ssh/*


# Use the private IP addr. of AN1 and AN2


ssh ansibleadmin@172.31.44.69
ssh ansibleadmin@172.31.35.100

chown -R devopsadmin:devopsadmin /etc/ansible

#chmod 600 /home/ansibleadmin/.ssh/*


###update vi etc/ansible/hosts


[testnodes]
samplenode1 ansible_ssh_host=172.31.44.69 ansible_ssh_user=ansibleadmin
samplenode2 ansible_ssh_host=172.31.35.100 ansible_ssh_user=ansibleadmin





#**************************************************************************************************************************
#hosts file is the default Inventory file for ansible 
#**************************************************************************************************************************
#Access thru Ansible Controller :
#**************************************************************************************************************************

ansible <hosts_name> -m <module_name> -i <inventory_file>

ansible testnodes -m ping 

ansible devnodes -m ping 


ansible dev_server_grp1 -m ping -i dev_servers

#host machines can be identified using :
# all | group_name | individual_host_name


[testnodes]
samplenode1 ansible_ssh_host=172.31.43.198 ansible_ssh_user=ansibleadmin
samplenode2 ansible_ssh_host=172.31.38.32 ansible_ssh_user=ansibleadmin








###update vi /etc/ansible/host

[testnodes]
samplenode1 ansible_ssh_host=172.31.41.32 ansible_ssh_user=ansibleadmin
samplenode2 ansible_ssh_host=172.31.39.17 ansible_ssh_user=ansibleadmin

##################################################################################

#**************************************************************************************************************************
#Access thru Ansible Controller :
#**************************************************************************************************************************
Ansible Modules: Eg.: 
ansible testnodes -m ping

ansible all -m ping ### will ping all hosts from /etc/ansible/hosts file

ansible samplenode1 -m ping
ansible samplenode2 -m ping

#or using user defined Inventory file
#ansible ansible-node1 -m ping -i myinventoryfile.txt


ansible samplenode1 -m ping -i myinventoryfile.txt

#**************************************************************************************************************************

ansible samplenode2 -m ping

ansible samplenode1 -m shell -a "sleep 20 ; echo 'hi'"


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Ansible Facts!

ansible samplenode1 -m setup
ansible samplenode1 -m setup -a "filter=ansible_distribution"


ansible testnodes -m setup -a "filter=ansible_distribution"



##Transfer a file from Ansible Controller to Target Nodes using copy Module

ansible samplenode1 -m copy -a "src=/etc/ansible/file1.txt dest=/home/ansibleadmin"

ansible samplenode1 -m copy -a "src=/etc/ansible/file1.txt dest=/home/ansibleadmin backup=yes"




##Transfer a file from Ansible Nodes to Ansible Controller using fetch Module

ansible samplenode1 -m fetch -a "src=/home/ansibleadmin/filefrom_AN1.txt dest=/home/devopsadmin"


### List all modules:
	ansible-doc -l
	### No. of modules:
	ansible-doc -l | wc -l
	### Search for specific modules:
	ansible-doc -l | grep shel
	### To know about any specific modules:
	ansible-doc shell


	https://docs.ansible.com/ansible/2.9/modules/list_of_all_modules.html

	Ansible Playbooks :::

	*.yaml scripts 		==> Key-value pair

	- Playbook creation



	Playbooks :::::

		- *.yaml Script
		- Defines the Tasks/Modules to be executed in target nodes.
		- Reusability
		
		Tasks are collection of Modules 
			Modules are the scripts/function
		
		
	Build Server :::

		- install jdk 
		- install git 
		- install maven


	#**************************************************************************************************************************
	#Ansible Variables !
	
	#shell : echo $var1 

	in yaml : "{{var1}}"

	ansible samplenode1 -m setup

	debug - 
		msg 	- used to print the constant value and variable data
		var 	- used to print only the variable data

	key:Value pair 

#********************************************************************************************************************

	#debugmod.yaml / *.yml

---
 - hosts: testnodes
   tasks:
   - debug:  
	  msg:
	   - "The os distribution is: {{ansible_distribution}}" 
	   - "The os name is: {{ansible_system}}"
	   - "The os family is: {{ansible_os_family}}"
	   
		Execute :::
		
				ansible-playbook debugmod.yaml 


#********************************************************************************************************************


