
#########################
Day 28 : 16th Oct. 2025
#########################

	Infra-Structure provisioning using Terraform ::::
	
	
		- IAC Tool 	==> Terraform/CF/ARM ==> Provisioning/Creation of Resources 
					
					==>	Ansible ==> Configuration Management 
		
	
	- Infra-Structure Provisioning using Terraform ::::
	
		
		Dev Environments 
		
		Test Environments 
		
		
	- IAC Tool : Terraform 	
		
		- Terraform Process Workflow 
		
		- Working with Terraform 
		
			- Install Terraform in Local Machine
			
	Why ???
	
		
		- Terraform Process Workflow :::
		
			- Identify the Scope of Target Environment (AWS/Azure/GCP)
			
			- Write Terraform Scripts based on the Scope 
			
			- Perform Terraform Init --> Initialize Terraform Provider to the Terraform Project 
			
			- Perform Terraform Plan --> To Preview the Terraform Script
			
			- Perform Terraform Apply -> To apply the changes to target Infra-Structure
			
	
	
	- Working with Terraform :::
		
		- About Terraform Registry/Provider 
		
				https://registry.terraform.io/browse/providers
				
resource "aws_instance" "example" {
  ami           = "resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64"
  instance_type = "t3.micro"

  tags = {
    Name = "HelloWorld"
  }
}			



		- Installation & Configuration of Terraform in Local Machine
			
				https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli
				
	Working with Terraform :::
	
		- Install Terraform 		--> Local Windows Machine / Linux Machine 
		
				https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli
				
				https://developer.hashicorp.com/terraform/install
				

				Using Manual Approach - Install Terraform on local windows machine 
				
					https://developer.hashicorp.com/terraform/install
				
					- Download Windows AMD64 Version Terraform -- zipfile 
						- Right Click and Extract all 
							- Get the Extracted Terraform Folder 
								- Get the terraform - binary file 
								
					- Setup Environment Variable for terraform binary file 
						- from windows start menu, search for enviroment variable 
							- click of edit enviroment variable setting 
								- find system properties dialog 
									- select enviroment variables button
										- On Environment Variables Dialog 
											- goto to System Variable 
												- Select path variable and edit 
													- Click on New 
														- add C:\Softwares\terraform_1.7.2_windows_amd64
															- apply the changes and close the settings
				
				
		- Install Visual Studio Code 	- IDE used to create Terraform Projects 
			
				https://code.visualstudio.com/download
				
		
		- Open Visual Studio Code - Create Terraform Project 
			
				
		
		- Open Visual Studio Code 
		
		- Install the Extension/Plugins :
		
			Terraform Extension for Visual Studio Code
		
		- Create Terraform Project :::	
	
	

Next :
	
	Work with Terraform Scripts to Create AWS Resources 
	
	
	
	Monitoring using Prometheus/Grafana

	DevOps Projects!


	
#########################
Day 29 : 17th Oct. 2025
#########################

	- Working with Terraform Scripts to Create AWS Resources 
	
		- Launch EC2 Instance
		
		AWS :
		
			- Console 									# Password Based Authentication
			
			- AWS CLI 									# Token for Authentication
			
			- SDK										# Token for Authentication
			
			- IAC Tools --> Terraform/Cloudformation 
			
			- Enable User Authentication.
			
			- Create AWS Access Key & Secret Key.		# Token for Authentication
			
				Access Key: 		zxcvzxcvxcKR
				
				Secret Access Key: 	zxcvzxcv
				
				
		- Open Visual Studio Code 
		
		- Install the Extension/Plugins :
		
			Terraform Extension for Visual Studio Code
		
		- Create Terraform Project :::	
		
		



			
		- Functionalities :
		
			==>	Create/Add New Resource					+
			
			==>	Delete/Destroy Resource 				- 
			
			==> Alter/Change Resource 					~
			
			
		- Terraform Process Workflow :::
		
			- Identify the Scope of Target Environment (AWS/Azure/GCP)
			
			- Write Terraform Scripts based on the Scope 
			
			- Perform Terraform Init --> Initialize Terraform Provider to the Terraform Project 
			
			- Perform Terraform Plan --> To Preview the Terraform Script
			
			- Perform Terraform Apply -> To apply the changes to target Infra-Structure	
			

		- Create a folder(Workspace)
		
			Open VS Code -> Goto File Menu -> Choose Open Folder 			
			
		- Open Terminal :
		
			> terraform --version 
			
			
		- Terraform State File :
		
			- Used to maintain the current state of the Actual Infra-Structure

			
		terraform import resource resource id
		
		
		Terraform Project ::::
		
			AWS Infra-Structure:
			
			
